--------------------------------STARTIN CODE----------------------------------
const readline = require('readline');
const readlineInterface = readline.createInterface(process.stdin, process.stdout);

function ask(questionText) {
  return new Promise((resolve, reject) => {
    readlineInterface.question(questionText, resolve);
  });
}

start();

async function start() {
  const welcomeMessage = `182 Main St.
You are standing on Main Street between Church and South Winooski.
There is a door here. A keypad sits on the handle.
On the door is a handwritten sign.`;
  let answer = await ask(welcomeMessage);
  console.log('Now write your code to make this work!');
  process.exit();
}
--------------------END OF STARTING CODE--------------------

$$$$$$$$$ CODE THAT I WILL NEED DURING THE GAME $$$$$$$$$$

let currentPlayerLocation = 'street';


let answer = wait ask
let differentAnswer = await ask


let validInputs = [];


\n

else {
    console.log(`I'm sorry, I don't understand ${answer}.`);
    differentAnswer = await ask ("Try again");
    
    while (checkTheAnswer(differentAnswer) === false) {
      differentAnswer = await ask (`Try again\n`);
    }
};


function that checks if an answer contains the words that we need to move on:

function checkTheAnswer (answer) {
  let wordsNeeded = ['ex', 'ex2'];

  let result = answer.includes(wordsNeeded);

}

How do I check for two words on a string using include()?

if(str.includes("a") && str.includes("b")) {
console.log(a and b received)
}

When the command insert is invalid

else {
    console.log(`...`);
    answer = await ask ("Try again!\n");
    
    while (answer !== 'look closer') {
    answer = await ask (`${answer} doesn't ring any bell. Try again!\n`);
    }
}; 

To check what's in your backpack inventory
backpack.message

function read(item) {
 async function read (item) { console.log(item.read)}
}
-------------------------------------------------------JAVASCRIPT TOOLS NEEDED---------
State Machine ---> currentRoom, other Rooms
class, objects
functions
methods

-----------------------------------------------------------------------------------------

class Room {
    constructor(description (immutable), connection (imm), inventory (mutable)) {
        this.description = description
        this.connection = connection
        this.inventory = inventory
    }
}

class Characters {
  constructor (inventory, status) {
    this.inventory = inventory
    this.status = status
  }
}


